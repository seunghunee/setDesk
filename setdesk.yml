---
- hosts: localhost
  connection: local
  tasks:
    #TODO: startup script

    # OS: Ubuntu
    ## Linux Kernel
    - name: set inotify watchers's maximum limit
      sysctl:
        name: fs.inotify.max_user_watches
        value: "524288"
        reload: yes
      become: yes

    ## Package manager: apt
    - name: Keep all softwares up to date
      apt:
        update_cache: yes
        upgrade: full
      become: yes

    - name: Remove unnecessary programs
      apt:
        name: "{{ item }}"
        state: absent
        purge: yes
      loop:
        - firefox
        - evince
        - gedit
      become: yes

    - name: Remove useless packages from the cache
      apt:
        autoclean: yes
      become: yes

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes
        purge: yes
      become: yes

    ## Desktop environment: GNOME
    - name: Install python3-psutil (python3) # For dconf module
      apt:
        name: python3-psutil
      become: yes

    - name: 윈도우 색을 dark로 설정
      dconf:
        key: "/org/gnome/desktop/interface/gtk-theme"
        value: "'Yaru-dark'"

    - name: No blank screen
      dconf:
        key: "/org/gnome/desktop/session/idle-delay"
        value: uint32 0

    - name: Auto-hide the Dock
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/dock-fixed"
        value: "false"

    - name: Remove appliction icons from dock
      dconf:
        key: "/org/gnome/shell/favorite-apps"
        value: "['']"

    ### Home directory
    - name: Remove personal special folders
      file:
        path: ~/{{ item }}
        state: absent
      loop:
        - Documents
        - Downloads
        - Music
        - Pictures
        - Public
        - Templates
        - Videos

    - name: Disable the automatic special folder creation
      copy:
        src: configs/user-dirs.conf
        dest: ~/.config/user-dirs.conf

    ### Key bindings
    - name: Map caps lock to ctrl
      dconf:
        key: "/org/gnome/desktop/input-sources/xkb-options"
        value: "['ctrl:nocaps']"

    - name: Unbind [Ctrl + Alt + Left]
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-left"
        value: "['']"

    - name: Unbind [Ctrl + Alt + Right]
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-to-workspace-right"
        value: "['']"

    - name: Unbind [Ctrl + Shift + Alt + up] from move-to-workspace-up
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-up"
        value: "['<Super><Shift>Page_Up']"

    - name: Unbind [Ctrl + Shift + Alt + down] from move-to-workspace-down
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/move-to-workspace-down"
        value: "['<Super><Shift>Page_Down']"

    - name: Unbind [Alt + Tab] from switch-applications
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-applications"
        value: "['<Super>Tab']"

    - name: Bind [Alt + Tab] to switch-windows
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-windows"
        value: "['<Alt>Tab']"

    - name: Unbind [Alt + Shift + Tab] from switch-applications-backward
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-applications-backward"
        value: "['<Shift><Super>Tab']"

    - name: Bind [Alt + Shift + Tab] to switch-windows-backward
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-windows-backward"
        value: "['<Shift><Alt>Tab']"

    - name: Unbind [Alt + F8]
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/begin-resize"
        value: "['']"

    ### Input framework: Ibus
    - name: Install ibus hangul (Korean)
      apt:
        name: ibus-hangul
      register: ibus_hangul
      become: yes

    - name: Install ibus anthy (Japanese)
      apt:
        name: ibus-anthy
      register: ibus_anthy
      become: yes

    - name: Restart ibus daemon
      shell: ibus restart
      when: ibus_hangul.changed or ibus_anthy.changed

    - name: Set input sources
      dconf:
        key: "/org/gnome/desktop/input-sources/sources"
        value: "[('xkb', 'us'), ('ibus', 'hangul'), ('ibus', 'anthy')]"

    - name: ibus의 unicode hotkey를 해제 # Ctrl+Shift+E가 기본으로 할당되어 있다
      dconf:
        key: "/desktop/ibus/panel/emoji/unicode-hotkey"
        value: "@as []"

    - name: ibus-hangul의 처음입력모드를 한글로 설정
      dconf:
        key: "/org/freedesktop/ibus/engine/hangul/initial-input-mode"
        value: "'hangul'"

    - name: ibus-anthy의 처음입력모드를 히라가나로 설정
      dconf:
        key: "/org/freedesktop/ibus/engine/anthy/common/input-mode"
        value: "0"

    # Terminal: Bash(GNOME Terminal)
    - name: Disable XON/XOFF for i-search forward
      lineinfile:
        path: ~/.bashrc
        line: stty -ixon
        create: yes

    # Editor: Visual Studio Code
    - include: ppa-install.yml
      vars:
        name: Visual Studio Code
        pkg_name: code
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
        key_url: https://packages.microsoft.com/keys/microsoft.asc
      become: yes

    - name: Set Visual Studio Code as default editor
      lineinfile:
        path: ~/.bashrc
        line: export EDITOR="code -w"
        create: yes

    - name: Install vscode sync extension
      shell: >
        code --list-extensions | grep -q Shan.code-settings-sync
        && echo -n OK
        || code --install-extension shan.code-settings-sync
      register: result
      changed_when: result.stdout != 'OK'

    # Version Control system: Git
    - name: Install Git
      apt:
        name: git
      become: yes

    - name: Configure Git
      git_config:
        scope: global
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      loop:
        - { name: user.email, value: seunghunee@gmail.com }
        - { name: user.name, value: Shin Seunghun }
        - { name: diff.tool, value: vscode }
        - {
            name: difftool.vscode.cmd,
            value: code --wait --diff $LOCAL $REMOTE,
          }

    # Web browser: Google Chrome
    - include: ppa-install.yml
      vars:
        name: Google Chrome
        pkg_name: google-chrome-stable
        repo: deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main
        key_url: https://dl.google.com/linux/linux_signing_key.pub
      become: yes

    # Tools
    - name: Install curl
      apt:
        name: curl
      become: yes

    # Golang
    - name: Install Golang
      apt:
        name: golang
      become: yes

    - name: Add go workspace's bin directory to global PATH
      lineinfile:
        path: ~/.bashrc
        line: export PATH=$PATH:$(go env GOPATH)/bin
        create: yes
    #TODO: go bash auto completion

    # JavaScript
    - name: Install Node.js
      apt:
        name: nodejs
      become: yes

    - name: Install npm
      apt:
        name: npm
      become: yes
